/**
 * This code was generated by Builder.io.
 */
import React, { useState, useCallback } from "react";
import { useDropzone } from "react-dropzone";
import axios from "axios";
import styles from "./ContractAnalysisPortal.module.css";
import BackOffice from "./BackOffice";
import Sidebar from "./Sidebar";
import WelcomeSection from "./WelcomeSection";

const ACCEPTED_FILE_TYPES = ".docx,.pdf,.txt,.csv";

function ContractAnalysisPortal() {
  const [analyzedData, setAnalyzedData] = useState(null);

  const onDrop = useCallback(async (acceptedFiles) => {
    const file = acceptedFiles[0];
    if (file) {
      await handleFileUpload(file);
    }
  }, []);

  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    onDrop,
    accept: ACCEPTED_FILE_TYPES,
  });

  const handleFileUpload = async (file) => {
    const formData = new FormData();
    formData.append("file", file);

    try {
      const response = await axios.post(
        "https://api.example.com/sacu",
        formData,
        {
          headers: { "Content-Type": "multipart/form-data" },
        }
      );
      if (response.status === 200 || response.status === 201) {
        setAnalyzedData(response.data);
      }
    } catch (error) {
      console.error("Error uploading file:", error);
      alert("An error occurred while analyzing the file. Please try again.");
    }
  };

  const handleButtonClick = () => {
    document.getElementById("fileInput").click();
  };

  const handleFileInputChange = (event) => {
    const file = event.target.files[0];
    if (file) {
      handleFileUpload(file);
    }
  };

  return (
    <div className={styles.container}>
      <div className={styles.content}>
        <Sidebar onButtonClick={handleButtonClick} />
        <main className={styles.mainContent}>
          {analyzedData ? (
            <BackOffice data={analyzedData} />
          ) : (
            <WelcomeSection
              getRootProps={getRootProps}
              getInputProps={getInputProps}
              isDragActive={isDragActive}
            />
          )}
        </main>
      </div>
      <input
        id="fileInput"
        type="file"
        accept={ACCEPTED_FILE_TYPES}
        onChange={handleFileInputChange}
        style={{ display: "none" }}
      />
    </div>
  );
}

export default ContractAnalysisPortal;
